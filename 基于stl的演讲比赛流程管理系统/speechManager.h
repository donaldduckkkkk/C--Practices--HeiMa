#pragma once
#include <iostream>
using namespace std;
#include <vector>
#include <map>
#include "speak.h"
#include <algorithm>
#include <deque>
#include <functional>
#include <numeric>
#include <string>
#include <fstream>


//设计演讲比赛的管理类
class SpeechManager
{
public:

	//构造函数
	SpeechManager();

	//菜单功能
	void show_Menu();

	//退出系统
	void exitSystem();
  
	//析构函数
	~SpeechManager();

	//初始化容器
	void initSpeech();

	//创建选手 
	void createSpeaker();

	//开始比赛 比赛整个流程
	void startSpeech();

	//抽签
	void speechDraw();

	//比赛
	void speechContest();

	//展示分数
	void showScore();

	//保存记录
	void saveRecord();

	//读取记录
	void loadRecord();

	//判断文件是否为空
	bool fileIsEmpty;

	//存放往届记录的容器
	map<int, vector<string>>m_Record;//key是届数，value是存放的冠军数据

	//查看往届记录
	void showRecord();

	//清空记录
	void clearRecord();


	//成员属性
//保存第一轮比赛选手编号容器
	vector<int>v1;
	//保存第二轮比赛选手编号容器
	vector<int>v2;
	//前三名选手编号容器
	vector<int>vVictory;
	//存放编号以及对应的选手容器
	map<int, Speaker>m_Speaker;
	//存放比赛轮数
	int m_Index;

};